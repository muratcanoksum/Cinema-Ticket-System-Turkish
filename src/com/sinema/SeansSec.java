package com.sinema;

import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

// Yetkili bilet eklemesi için sean seçim ekranı ..

/**
 *
 * @author Muratcan Öksüm & Emir Tuncer
 */
public class SeansSec extends javax.swing.JFrame {

    DefaultTableModel model;

    VeritabaniIslemler islemler = new VeritabaniIslemler();
    public static String filmadi_gonder = "Seans Seçiniz...";
    public static String filmtarihi_gonder = "Seans Seçiniz...";
    public static String filmsaati_gonder = "Seans Seçiniz...";
    public static String filmsalonu_gonder = "Seans Seçiniz...";
    public static boolean deger_dondur = false ;

    public SeansSec() {
        initComponents();
        model = (DefaultTableModel) film_tablosu.getModel();
        filmGoruntule();
        hata.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        film_tablosu = new javax.swing.JTable();
        onayla = new javax.swing.JButton();
        hata = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconImage(new ImageIcon("./src/com/sinema/images/icon.png").getImage());

        film_tablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Film Adı", "Tarih", "Saat", "Salon"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        film_tablosu.getTableHeader().setReorderingAllowed(false);
        film_tablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                film_tablosuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(film_tablosu);
        if (film_tablosu.getColumnModel().getColumnCount() > 0) {
            film_tablosu.getColumnModel().getColumn(0).setResizable(false);
            film_tablosu.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        onayla.setText("Onayla");
        onayla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onaylaActionPerformed(evt);
            }
        });

        hata.setForeground(new java.awt.Color(204, 0, 51));
        hata.setText("hata");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hata, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(onayla)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(onayla)
                    .addComponent(hata))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void film_tablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_film_tablosuMouseClicked
        int selectedrow = film_tablosu.getSelectedRow();
        filmadi_gonder = (model.getValueAt(selectedrow, 1).toString());
        filmtarihi_gonder = (model.getValueAt(selectedrow, 2).toString());
        filmsaati_gonder = (model.getValueAt(selectedrow, 3).toString());
        filmsalonu_gonder = (model.getValueAt(selectedrow, 4).toString());
    }//GEN-LAST:event_film_tablosuMouseClicked

    
    
    private void onaylaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onaylaActionPerformed
        int selectedrow = film_tablosu.getSelectedRow();
        if (selectedrow == -1) {
            if (model.getRowCount() == 0) {
                hata.setText("Film tablosu şu anda boş...");
            } else {
                hata.setText("Lütfen bir seans seçin...");
            }

        } else {
            deger_dondur = true;
            this.setVisible(false);
        }
    }//GEN-LAST:event_onaylaActionPerformed

    public void filmGoruntule() {

        model.setRowCount(0);

        ArrayList<Film> filmler = new ArrayList<Film>();

        filmler = islemler.filmGetir();

        if (filmler != null) {

            for (Film film : filmler) {
                Object[] eklenecek = {film.getId(), film.getFilm_adi(), film.getFilm_tarih(), film.getFilm_saat(), film.getFilm_salon()};

                model.addRow(eklenecek);

            }

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeansSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeansSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeansSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeansSec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeansSec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable film_tablosu;
    private javax.swing.JLabel hata;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton onayla;
    // End of variables declaration//GEN-END:variables
}
