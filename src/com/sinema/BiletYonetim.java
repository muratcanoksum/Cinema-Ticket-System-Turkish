package com.sinema;

import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Muratcan Öksüm & Emir Tuncer
 */
public class BiletYonetim extends javax.swing.JFrame {

    DefaultTableModel model;
    VeritabaniIslemler islemler = new VeritabaniIslemler();
    public static String filmadi_gonder;
    public static String filmtarih_gonder;
    public static String filmsaat_gonder;
    public static String filmsalon_gonder;
    public static String koltuklar_gelen;
    public static boolean deger_dondur;

    public BiletYonetim() {
        initComponents();
        model = (DefaultTableModel) bilet_tablosu.getModel();
        biletlerGoruntule();
        hata.setText("");
        seansGit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bilet_tablosu = new javax.swing.JTable();
        bilet_id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bilet_ekle = new javax.swing.JButton();
        bilet_guncelle = new javax.swing.JButton();
        bilet_sil = new javax.swing.JButton();
        hata_mesaj = new javax.swing.JLabel();
        biletler_guncelle = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        hata_mesaj2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        koltuk_Secimi = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        hata = new javax.swing.JLabel();
        bilet_soyisim = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bilet_koltuklar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        bilet_isim = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        bilet_kimlik = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        bilet_ucret = new javax.swing.JTextField();
        film_adi = new javax.swing.JTextField();
        film_salon = new javax.swing.JTextField();
        film_tarih = new javax.swing.JTextField();
        film_saat = new javax.swing.JTextField();
        senas_Sec = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        exit = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconImage(new ImageIcon("./src/com/sinema/images/icon.png").getImage());
        setLocation(new java.awt.Point(350, 100));
        setMinimumSize(new java.awt.Dimension(500, 500));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        bilet_tablosu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "İsim", "Soyisim", "Kimlik No", "Koltuklar", "Film Adı", "Tarih", "Saat", "Salon", "Ücret"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bilet_tablosu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bilet_tablosuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bilet_tablosu);
        if (bilet_tablosu.getColumnModel().getColumnCount() > 0) {
            bilet_tablosu.getColumnModel().getColumn(0).setResizable(false);
            bilet_tablosu.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        bilet_id.setEditable(false);
        bilet_id.setEnabled(false);

        jLabel1.setText("ID : ");

        jLabel2.setText("Tarih :");

        jLabel3.setText("Saat :");

        jLabel4.setText("İsim :");

        bilet_ekle.setText("Bilet Ekle");
        bilet_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilet_ekleActionPerformed(evt);
            }
        });

        bilet_guncelle.setText("Bilet Güncelle");
        bilet_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilet_guncelleActionPerformed(evt);
            }
        });

        bilet_sil.setText("Bilet Sil");
        bilet_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilet_silActionPerformed(evt);
            }
        });

        hata_mesaj.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        hata_mesaj.setForeground(new java.awt.Color(255, 0, 0));

        biletler_guncelle.setText("Liste Güncelle");
        biletler_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                biletler_guncelleActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("BİLET YÖNETİMİ");

        koltuk_Secimi.setText("Koltuk Seçimi");
        koltuk_Secimi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                koltuk_SecimiActionPerformed(evt);
            }
        });

        hata.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        hata.setForeground(new java.awt.Color(255, 0, 0));
        hata.setText("123");

        jLabel5.setText("Soyisim :");

        bilet_koltuklar.setEditable(false);

        jLabel7.setText("Koltuklar :");

        jLabel8.setText("Film Adı :");

        jLabel9.setText("Salon : ");

        jLabel10.setText("Kimlik No : ");

        jLabel11.setText("Ücret :");

        bilet_ucret.setText("0");

        film_adi.setEditable(false);

        film_salon.setEditable(false);

        film_tarih.setEditable(false);

        film_saat.setEditable(false);

        senas_Sec.setText("Seans Seçimi");
        senas_Sec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senas_SecActionPerformed(evt);
            }
        });

        jButton1.setText("Temizle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        exit.setText("Seçenekler");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sinema/images/exit.png"))); // NOI18N
        jMenuItem1.setText("Çıkış");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        exit.add(jMenuItem1);

        jMenuBar1.add(exit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hata_mesaj, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(303, 303, 303))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(hata, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(66, 66, 66)
                                                .addComponent(hata_mesaj2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(279, 279, 279)))
                                .addComponent(biletler_guncelle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bilet_kimlik, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bilet_id, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(107, 107, 107))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bilet_isim, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(bilet_soyisim, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(9, 9, 9)
                                        .addComponent(bilet_koltuklar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel11))
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(film_adi, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(film_salon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(film_saat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(film_tarih, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bilet_ucret, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(bilet_guncelle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bilet_ekle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(bilet_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(koltuk_Secimi, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(senas_Sec, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(2, 2, 2))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator3)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bilet_ekle)
                        .addGap(10, 10, 10)
                        .addComponent(bilet_guncelle)
                        .addGap(10, 10, 10)
                        .addComponent(bilet_sil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(senas_Sec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(koltuk_Secimi)
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bilet_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(bilet_isim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bilet_soyisim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bilet_kimlik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bilet_koltuklar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(film_adi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(film_salon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(film_tarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(film_saat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(bilet_ucret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(biletler_guncelle)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(hata_mesaj2)
                        .addGap(15, 15, 15)
                        .addComponent(hata)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hata_mesaj)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // textfield içerisindeki bilgileri alır ve guncellecek secimin id'sine gore verilerini gunceller
    // ve gerekli bilgilerin girilip girilmediğini kontrol eder.
    
    private void bilet_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilet_guncelleActionPerformed
        int selectedrow = bilet_tablosu.getSelectedRow();
        int id = Integer.valueOf(bilet_id.getText());
        String eskikoltuklar = model.getValueAt(selectedrow, 4).toString();
        String ad = bilet_isim.getText();
        String soyad = bilet_soyisim.getText();
        String tcno = bilet_kimlik.getText();
        String koltuklar = bilet_koltuklar.getText();
        String tutar1 = bilet_ucret.getText();
        String filmadi = film_adi.getText();
        String tarih = film_tarih.getText();
        String saat = film_saat.getText();
        String salon = film_salon.getText();
        int tutar = Integer.valueOf(tutar1.trim());

        if (selectedrow == -1) {

            if (model.getRowCount() == 0) {
                hata.setText("Film Tablosu şu anda boş. ");
            } else {
                hata.setText("Lütfen güncellenecek bir bilet seçin.");
            }
        } else {

            hata.setText("");

            if (filmadi.equals("Seans Seçiniz...")) {
                hata.setText("Seans bilgisini seçiniz...");
            } else if (koltuklar.equals("")) {
                hata.setText("Koltuk seçimi yapınız...");
            } else if (ad.trim().equals("")) {
                hata.setText("İsim bilgisini giriniz...");
            } else if (soyad.trim().equals("")) {
                hata.setText("Soyisim bilgisini giriniz...");
            } else if (tcno.trim().equals("")) {
                hata.setText("Kimlik bilgisini giriniz...");
            } else {
                islemler.biletGuncelle(id, ad, soyad, tcno, koltuklar, filmadi, tarih, saat, salon, tutar);
                koltukdurumGuncelle(filmadi, salon, tarih, saat, eskikoltuklar, "false");
                koltukdurumGuncelle(filmadi, salon, tarih, saat, koltuklar, "true");
                yaziTemizle();
            }
            biletlerGoruntule();
            hata.setText("Bilet başarıyla güncellendi...");
        }


    }//GEN-LAST:event_bilet_guncelleActionPerformed

    
    // tablodan seçim yapılıp yapılmadığını kontrol eder. seçim anında id bilgisi alır ve 
    // o id'ye ait veritabınındaki bileti siler.
    
    private void bilet_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilet_silActionPerformed
        hata.setText("");

        int selectedrow = bilet_tablosu.getSelectedRow();
        if (selectedrow == -1) {
            if (model.getRowCount() == 0) {
                hata.setText("Biletler tablosu şu anda boş...");
            } else {
                hata.setText("Lütfen silinecek bir bilet seçin...");
            }

        } else {
            int id = (int) model.getValueAt(selectedrow, 0);
            islemler.biletSil(id);
            String koltuks = model.getValueAt(selectedrow, 4).toString();
            String filmadi = model.getValueAt(selectedrow, 4).toString();
            String filmsalon = model.getValueAt(selectedrow, 8).toString();
            String tarih = model.getValueAt(selectedrow, 6).toString();
            String saat = model.getValueAt(selectedrow, 7).toString();
            koltukdurumGuncelle(filmadi, filmsalon, tarih, saat, koltuks, "false");
            biletlerGoruntule();
            yaziTemizle();
            hata.setText("Bilet başarıyla silindi...");
        }
    }//GEN-LAST:event_bilet_silActionPerformed

    // girilen bilgileri kontrol eder eksik olmaması veritabanına bilet ekler 
    
    private void bilet_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilet_ekleActionPerformed
        hata.setText("");

        String ad = bilet_isim.getText();
        String soyad = bilet_soyisim.getText();
        String tcno = bilet_kimlik.getText();
        String koltuklar = bilet_koltuklar.getText();
        String tutar1 = bilet_ucret.getText();
        String filmadi = film_adi.getText();
        String tarih = film_tarih.getText();
        String saat = film_saat.getText();
        String salon = film_salon.getText();
        try {
            int tutar = Integer.parseInt(tutar1);

            if (filmadi.equals("Seans Seçiniz...")) {
                hata.setText("Seans bilgisini seçiniz...");
            } else if (koltuklar.equals("")) {
                hata.setText("Koltuk seçimi yapınız...");
            } else if (ad.trim().equals("")) {
                hata.setText("İsim bilgisini giriniz...");
            } else if (soyad.trim().equals("")) {
                hata.setText("Soyisim bilgisini giriniz...");
            } else if (tcno.trim().equals("")) {
                hata.setText("Kimlik bilgisini giriniz...");
            } else {
                islemler.biletEkle(ad, soyad, tcno, koltuklar, tutar, filmadi, tarih, saat, salon);
                koltukdurumGuncelle(filmadi, salon, tarih, saat, koltuklar, "true");
                biletlerGoruntule();
                yaziTemizle();
                hata.setText("Yeni Bilet Başarıyla Eklendi...");
            }
        } catch (Exception e) {
            hata.setText("Lütfen tutar bölümüne sayı giriniz...");
        }
    }//GEN-LAST:event_bilet_ekleActionPerformed

    // tablonun içindeki verileri veritabanı üzerinden günceller.
    
    private void biletler_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_biletler_guncelleActionPerformed
        biletlerGoruntule();
        hata.setText("Liste Güncellendi ...");
    }//GEN-LAST:event_biletler_guncelleActionPerformed

    // tablo içerisinden seçilen satırdaki verileri textfield'ların içerisine yerleştirir.
    
    private void bilet_tablosuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bilet_tablosuMouseClicked
        int selectedrow = bilet_tablosu.getSelectedRow();
        bilet_id.setText(model.getValueAt(selectedrow, 0).toString());
        bilet_isim.setText(model.getValueAt(selectedrow, 1).toString());
        bilet_soyisim.setText(model.getValueAt(selectedrow, 2).toString());
        bilet_kimlik.setText(model.getValueAt(selectedrow, 3).toString());
        bilet_koltuklar.setText(model.getValueAt(selectedrow, 4).toString());
        film_adi.setText(model.getValueAt(selectedrow, 5).toString());
        film_salon.setText(model.getValueAt(selectedrow, 8).toString());
        film_tarih.setText(model.getValueAt(selectedrow, 6).toString());
        film_saat.setText(model.getValueAt(selectedrow, 7).toString());
        bilet_ucret.setText(model.getValueAt(selectedrow, 9).toString());
        koltukAyar();
    }//GEN-LAST:event_bilet_tablosuMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setVisible(false);
        YetkiliPanel ansyf = new YetkiliPanel();
        ansyf.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    // Seans secimi sonucu gelen verinin olup olmadığını kontrol eder ve KoltukSecimiYetkili class'ından nesne oluşturur
    // görünürlüğü aktif eder.
    
    private void koltuk_SecimiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_koltuk_SecimiActionPerformed

        if (film_adi.getText().equals("Seans Seçiniz...")) {
            hata.setText("Lütfen önce seans seçiniz...");
        } else {
            koltukAyar();
            KoltukSecimYetkili klt = new KoltukSecimYetkili();
            klt.setVisible(true);

        }
    }//GEN-LAST:event_koltuk_SecimiActionPerformed

    
    private void senas_SecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senas_SecActionPerformed
        SeansSec sns = new SeansSec();
        sns.setVisible(true);

    }//GEN-LAST:event_senas_SecActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        seansGit();
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        yaziTemizle();
    }//GEN-LAST:event_jButton1ActionPerformed

    // textfield içerisindeki verileri sıfırlar.
    
    public void yaziTemizle() {
        bilet_id.setText("");
        bilet_isim.setText("");
        bilet_soyisim.setText("");
        bilet_kimlik.setText("");
        bilet_koltuklar.setText("");
        film_adi.setText("Seans Seçiniz...");
        film_salon.setText("Seans Seçiniz...");
        film_tarih.setText("Seans Seçiniz...");
        film_saat.setText("Seans Seçiniz...");
        bilet_ucret.setText("0");
        filmadi_gonder = ("");
        filmtarih_gonder = ("");
        filmsaat_gonder = ("");
        filmsalon_gonder = ("");
    }

    // koltuk secimi için gerekli verileri gonderir.
    
    public void koltukAyar() {
        filmadi_gonder = film_adi.getText();
        filmtarih_gonder = film_tarih.getText();
        filmsaat_gonder = film_saat.getText();
        filmsalon_gonder = film_salon.getText();
    }

    // seans seciminden gelecek verileri alır ve gerekli yerlere yazar.
    
    public void seansGit() {
        SeansSec sean = new SeansSec();
        String filmadig = sean.filmadi_gonder;
        String filmtarihg = sean.filmtarihi_gonder;
        String filmsaatg = sean.filmsaati_gonder;
        String filmsalong = sean.filmsalonu_gonder;

        film_adi.setText(filmadig);
        film_tarih.setText(filmtarihg);
        film_saat.setText(filmsaatg);
        film_salon.setText(filmsalong);

        bilet_koltuklar.setText(koltuklar_gelen);
    }

    // veritabanı içindeki bilet bilgilerini bilet nesnesinde oluşan array ile tablonun içerisine yazar.
    
    public void biletlerGoruntule() {

        model.setRowCount(0);

        ArrayList<Bilet> biletler = new ArrayList<Bilet>();

        biletler = islemler.biletGetir();

        if (biletler != null) {

            for (Bilet bilet : biletler) {
                Object[] eklenecek = {bilet.getId(), bilet.getAd(), bilet.getSoyad(), bilet.getTcno(), bilet.getKoltuklar(), bilet.getFilmadi(), bilet.getFilmtarih(), bilet.getFilmsaat(), bilet.getFilmsalon(), bilet.getTutar()};

                model.addRow(eklenecek);

            }

        }

    }

    // int ay bilgisini string'e çevirir.
   
    public String filmTarihAl(String tarih) {
        String gun = tarih.substring(8, 10);
        String ays = tarih.substring(5, 7);
        String yıl = tarih.substring(0, 4);;
        String ay;
        switch (ays) {
            case "01":
                ay = "Ocak";
                break;
            case "02":
                ay = "Şubat";
                break;
            case "03":
                ay = "Mart";
                break;
            case "04":
                ay = "Nisan";
                break;
            case "05":
                ay = "Mayıs";
                break;
            case "06":
                ay = "Haziran";
                break;
            case "07":
                ay = "Temmuz";
                break;
            case "08":
                ay = "Ağustos";
                break;
            case "09":
                ay = "Eylül";
                break;
            case "10":
                ay = "Ekim";
                break;
            case "11":
                ay = "Kasım";
                break;
            case "12":
                ay = "Aralık";
                break;
            default:
                ay = "Ocak";
        }
        return gun + " " + ay + " " + yıl;
    }

    // secim yapılan koltuk sacısını string uzunluğuna göre belirler.
    
    public int kacKoltuk(String koltuklar) {
        int uzun = koltuklar.trim().length();

        switch (uzun) {
            case 2:
                return 1;
            case 5:
                return 2;
            case 8:
                return 3;
            case 11:
                return 4;
            default:
                return 0;
        }
    }

    // bilet verisinde alınan koltuk numaralarına göre koltuk doluluk boşluk ayarlarını yapar.
    
    public void koltukdurumGuncelle(String filmadi, String filmsalon, String tarih, String saat, String koltuklar, String durum) {
        String koltukson, koltukson2, koltukson3, koltukson4;
        int sayi = kacKoltuk(koltuklar);
        if (sayi == 1) {
            koltukson = koltuklar.trim();
            islemler.koltukGuncelle(filmadi, koltukson, filmsalon, tarih, saat, durum);
        } else if (sayi == 2) {
            koltukson = koltuklar.trim().substring(0, 2);
            koltukson2 = koltuklar.trim().substring(3);
            islemler.koltukGuncelle(filmadi, koltukson, filmsalon, tarih, saat, durum);
            islemler.koltukGuncelle(filmadi, koltukson2, filmsalon, tarih, saat, durum);
        } else if (sayi == 3) {
            koltukson = koltuklar.trim().substring(0, 2);
            koltukson2 = koltuklar.trim().substring(3, 5);
            koltukson3 = koltuklar.trim().substring(6);
            islemler.koltukGuncelle(filmadi, koltukson, filmsalon, tarih, saat, durum);
            islemler.koltukGuncelle(filmadi, koltukson2, filmsalon, tarih, saat, durum);
            islemler.koltukGuncelle(filmadi, koltukson3, filmsalon, tarih, saat, durum);
        } else if (sayi == 4) {
            koltukson = koltuklar.trim().substring(0, 2);
            koltukson2 = koltuklar.trim().substring(3, 5);
            koltukson3 = koltuklar.trim().substring(6, 8);
            koltukson4 = koltuklar.trim().substring(9);
            islemler.koltukGuncelle(filmadi, koltukson, filmsalon, tarih, saat, durum);
            islemler.koltukGuncelle(filmadi, koltukson2, filmsalon, tarih, saat, durum);
            islemler.koltukGuncelle(filmadi, koltukson3, filmsalon, tarih, saat, durum);
            islemler.koltukGuncelle(filmadi, koltukson4, filmsalon, tarih, saat, durum);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BiletYonetim.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BiletYonetim.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BiletYonetim.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BiletYonetim.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BiletYonetim().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bilet_ekle;
    private javax.swing.JButton bilet_guncelle;
    private javax.swing.JTextField bilet_id;
    private javax.swing.JTextField bilet_isim;
    private javax.swing.JTextField bilet_kimlik;
    private javax.swing.JTextField bilet_koltuklar;
    private javax.swing.JButton bilet_sil;
    private javax.swing.JTextField bilet_soyisim;
    private javax.swing.JTable bilet_tablosu;
    public javax.swing.JTextField bilet_ucret;
    private javax.swing.JButton biletler_guncelle;
    private javax.swing.JMenu exit;
    private javax.swing.JTextField film_adi;
    private javax.swing.JTextField film_saat;
    private javax.swing.JTextField film_salon;
    private javax.swing.JTextField film_tarih;
    private javax.swing.JLabel hata;
    private javax.swing.JLabel hata_mesaj;
    private javax.swing.JLabel hata_mesaj2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton koltuk_Secimi;
    private javax.swing.JButton senas_Sec;
    // End of variables declaration//GEN-END:variables
}
